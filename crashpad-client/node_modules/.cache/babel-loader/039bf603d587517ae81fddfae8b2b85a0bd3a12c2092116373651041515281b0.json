{"ast":null,"code":"var _jsxFileName = \"/Users/snehaqbee/crashpad/crashpad_frontend/src/components/registration/googleLoginButton.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { GoogleOAuthProvider, GoogleLogin } from '@react-oauth/google';\nimport { useNavigate } from 'react-router-dom';\nimport AuthService from '../../services/registration/authentication';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst clientId = 'Test_ID';\nconst GoogleLoginButton = () => {\n  _s();\n  const navigate = useNavigate();\n  const handleSuccess = async response => {\n    try {\n      const token = response.credential;\n      const user = await AuthService.loginWithGoogle(token);\n      navigate('/dashboard');\n    } catch (error) {\n      console.error(\"Google login failed\", error);\n    }\n  };\n  const handleError = () => {\n    console.error(\"Google login failed\");\n  };\n  return /*#__PURE__*/_jsxDEV(GoogleOAuthProvider, {\n    clientId: clientId,\n    children: /*#__PURE__*/_jsxDEV(GoogleLogin, {\n      onSuccess: handleSuccess,\n      onError: handleError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(GoogleLoginButton, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n_c = GoogleLoginButton;\nexport default GoogleLoginButton;\nvar _c;\n$RefreshReg$(_c, \"GoogleLoginButton\");","map":{"version":3,"names":["React","GoogleOAuthProvider","GoogleLogin","useNavigate","AuthService","jsxDEV","_jsxDEV","clientId","GoogleLoginButton","_s","navigate","handleSuccess","response","token","credential","user","loginWithGoogle","error","console","handleError","children","onSuccess","onError","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/snehaqbee/crashpad/crashpad_frontend/src/components/registration/googleLoginButton.tsx"],"sourcesContent":["import React from 'react';\nimport { GoogleOAuthProvider, GoogleLogin } from '@react-oauth/google';\nimport { useNavigate } from 'react-router-dom';\nimport AuthService from '../../services/registration/authentication';\n\nconst clientId = 'Test_ID';\n\nconst GoogleLoginButton: React.FC = () => {\n  const navigate = useNavigate();\n\n  const handleSuccess = async (response: any) => {\n    try {\n      const token = response.credential;\n      const user = await AuthService.loginWithGoogle(token);\n      navigate('/dashboard');\n    } catch (error) {\n      console.error(\"Google login failed\", error);\n    }\n  };\n\n  const handleError = () => {\n    console.error(\"Google login failed\");\n  };\n\n  return (\n    <GoogleOAuthProvider clientId={clientId}>\n      <GoogleLogin\n        onSuccess={handleSuccess}\n        onError={handleError}\n      />\n    </GoogleOAuthProvider>\n  );\n};\n\nexport default GoogleLoginButton;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,mBAAmB,EAAEC,WAAW,QAAQ,qBAAqB;AACtE,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,WAAW,MAAM,4CAA4C;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErE,MAAMC,QAAQ,GAAG,SAAS;AAE1B,MAAMC,iBAA2B,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxC,MAAMC,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAE9B,MAAMQ,aAAa,GAAG,MAAOC,QAAa,IAAK;IAC7C,IAAI;MACF,MAAMC,KAAK,GAAGD,QAAQ,CAACE,UAAU;MACjC,MAAMC,IAAI,GAAG,MAAMX,WAAW,CAACY,eAAe,CAACH,KAAK,CAAC;MACrDH,QAAQ,CAAC,YAAY,CAAC;IACxB,CAAC,CAAC,OAAOO,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;IAC7C;EACF,CAAC;EAED,MAAME,WAAW,GAAGA,CAAA,KAAM;IACxBD,OAAO,CAACD,KAAK,CAAC,qBAAqB,CAAC;EACtC,CAAC;EAED,oBACEX,OAAA,CAACL,mBAAmB;IAACM,QAAQ,EAAEA,QAAS;IAAAa,QAAA,eACtCd,OAAA,CAACJ,WAAW;MACVmB,SAAS,EAAEV,aAAc;MACzBW,OAAO,EAAEH;IAAY;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACiB,CAAC;AAE1B,CAAC;AAACjB,EAAA,CAzBID,iBAA2B;EAAA,QACdL,WAAW;AAAA;AAAAwB,EAAA,GADxBnB,iBAA2B;AA2BjC,eAAeA,iBAAiB;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}