{"ast":null,"code":"var _jsxFileName = \"/Users/snehaqbee/crashpad_frontend/src/components/registration/login.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport AccountForm from \"./accountForm\";\nimport AuthService from \"../../services/registration/authentication\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [message, setMessage] = useState(\"\");\n  const navigate = useNavigate();\n  const handleLogin = (username, email, password) => {\n    AuthService.login(username, password).then(response => {\n      navigate(\"/dashboard\");\n    }, error => {\n      const resMessage = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n      if (error.response && error.response.status === 401) {\n        setMessage(\"Invalid username or password. Please try again.\");\n      } else {\n        setMessage(resMessage);\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(AccountForm, {\n    isLogin: true,\n    onSubmit: handleLogin,\n    message: message,\n    setMessage: setMessage\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"a8PARnOzpJ4f9XTPNmrrrCDJT3c=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useNavigate","AccountForm","AuthService","jsxDEV","_jsxDEV","Login","_s","message","setMessage","navigate","handleLogin","username","email","password","login","then","response","error","resMessage","data","toString","status","isLogin","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/snehaqbee/crashpad_frontend/src/components/registration/login.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport AccountForm from \"./accountForm\";\nimport AuthService from \"../../services/registration/authentication\";\n\nconst Login: React.FC = () => {\n  const [message, setMessage] = useState(\"\");\n  const navigate = useNavigate();\n\n  const handleLogin = (username: string, email: string, password: string) => {\n    AuthService.login(username, password).then(\n      (response) => {\n        navigate(\"/dashboard\");\n      },\n      (error) => {\n        const resMessage =\n          (error.response &&\n            error.response.data &&\n            error.response.data.message) ||\n          error.message ||\n          error.toString();\n\n        if (error.response && error.response.status === 401) {\n          setMessage(\"Invalid username or password. Please try again.\");\n        } else {\n          setMessage(resMessage);\n        }\n      }\n    );\n  };\n\n  return (\n    <AccountForm\n      isLogin={true}\n      onSubmit={handleLogin}\n      message={message}\n      setMessage={setMessage}\n    />\n  );\n};\n\nexport default Login;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,WAAW,MAAM,4CAA4C;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErE,MAAMC,KAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAMU,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAE9B,MAAMU,WAAW,GAAGA,CAACC,QAAgB,EAAEC,KAAa,EAAEC,QAAgB,KAAK;IACzEX,WAAW,CAACY,KAAK,CAACH,QAAQ,EAAEE,QAAQ,CAAC,CAACE,IAAI,CACvCC,QAAQ,IAAK;MACZP,QAAQ,CAAC,YAAY,CAAC;IACxB,CAAC,EACAQ,KAAK,IAAK;MACT,MAAMC,UAAU,GACbD,KAAK,CAACD,QAAQ,IACbC,KAAK,CAACD,QAAQ,CAACG,IAAI,IACnBF,KAAK,CAACD,QAAQ,CAACG,IAAI,CAACZ,OAAO,IAC7BU,KAAK,CAACV,OAAO,IACbU,KAAK,CAACG,QAAQ,CAAC,CAAC;MAElB,IAAIH,KAAK,CAACD,QAAQ,IAAIC,KAAK,CAACD,QAAQ,CAACK,MAAM,KAAK,GAAG,EAAE;QACnDb,UAAU,CAAC,iDAAiD,CAAC;MAC/D,CAAC,MAAM;QACLA,UAAU,CAACU,UAAU,CAAC;MACxB;IACF,CACF,CAAC;EACH,CAAC;EAED,oBACEd,OAAA,CAACH,WAAW;IACVqB,OAAO,EAAE,IAAK;IACdC,QAAQ,EAAEb,WAAY;IACtBH,OAAO,EAAEA,OAAQ;IACjBC,UAAU,EAAEA;EAAW;IAAAgB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxB,CAAC;AAEN,CAAC;AAACrB,EAAA,CAlCID,KAAe;EAAA,QAEFL,WAAW;AAAA;AAAA4B,EAAA,GAFxBvB,KAAe;AAoCrB,eAAeA,KAAK;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}