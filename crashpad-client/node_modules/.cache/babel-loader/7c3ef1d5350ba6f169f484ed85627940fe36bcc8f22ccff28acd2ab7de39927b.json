{"ast":null,"code":"var _jsxFileName = \"/Users/snehaqbee/crashpad_frontend/src/components/registration/login.tsx\";\nimport React from \"react\";\nimport { TextField, Box } from \"@mui/material\";\nimport \"../../styles/Login.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  return /*#__PURE__*/_jsxDEV(Box, {\n    component: \"form\",\n    sx: {\n      '& .MuiTextField-root': {\n        m: 1,\n        width: '25ch'\n      }\n    },\n    noValidate: true,\n    autoComplete: \"off\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(TextField, {\n        required: true,\n        id: \"outlined-required\",\n        label: \"Required\",\n        defaultValue: \"Hello World\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n  /* const [email, setEmail] = useState(\"\");\n   const [password, setPassword] = useState(\"\");\n   const [errors, setErrors] = useState<{ [key: string]: string }>({});\n    const navigate = useNavigate();\n    const validate = () => {\n     let tempErrors: { [key: string]: string } = {};\n      if (!email) {\n       tempErrors.email = \"This field is required!\";\n     } else if (!/\\S+@\\S+\\.\\S+/.test(email)) {\n       tempErrors.email = \"This is not a valid email.\";\n     }\n      if (!password) {\n       tempErrors.password = \"This field is required!\";\n     }\n      setErrors(tempErrors);\n      return Object.keys(tempErrors).length === 0;\n   };\n    const handleLogin = () => {\n     if (!validate()) {\n       return;\n     }\n      navigate(\"/dashboard\");\n   };\n    const handleInputChange = (setter: React.Dispatch<React.SetStateAction<string>>, field: string) => (e: React.ChangeEvent<HTMLInputElement>) => {\n     setter(e.target.value);\n     setErrors((prevErrors) => {\n       const { [field]: removedError, ...rest } = prevErrors;\n       return rest;\n     });\n   };\n    return (\n     <div className=\"root-container\" style={{ backgroundImage: `url(${loginBG})` }}>\n       <div className=\"login-box\">\n         <img\n           src={logoImage}\n           alt=\"Crashpad Logo\"\n           className=\"logo\"\n         />\n         <form noValidate autoComplete=\"off\">\n           <TextField\n             fullWidth\n             margin=\"normal\"\n             id=\"email\"\n             label=\"Email Address\"\n             variant=\"outlined\"\n             value={email}\n             onChange={handleInputChange(setEmail, \"email\")}\n             error={!!errors.email}\n             helperText={errors.email}\n           />\n           <TextField\n             fullWidth\n             margin=\"normal\"\n             id=\"password\"\n             label=\"Password\"\n             type=\"password\"\n             variant=\"outlined\"\n             value={password}\n             onChange={handleInputChange(setPassword, \"password\")}\n             error={!!errors.password}\n             helperText={errors.password}\n           />\n           <Button\n             fullWidth\n             variant=\"contained\"\n             className=\"login-button\"\n             onClick={handleLogin}\n           >\n             Login\n           </Button>\n           <Typography variant=\"body2\" style={{ marginTop: \"1em\" }}>\n             New to Crashpad?\n             <Link to=\"/SignUp\" className=\"signup-link\">\n               Sign up here\n             </Link>\n           </Typography>\n         </form>\n       </div>\n     </div>\n   );*/\n};\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","TextField","Box","jsxDEV","_jsxDEV","Login","component","sx","m","width","noValidate","autoComplete","children","required","id","label","defaultValue","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/snehaqbee/crashpad_frontend/src/components/registration/login.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { TextField, Box } from \"@mui/material\";\nimport \"../../styles/Login.css\";\n\n\nconst Login: React.FC = () => {\n  return (\n    <Box\n      component=\"form\"\n      sx={{\n        '& .MuiTextField-root': { m: 1, width: '25ch' },\n      }}\n      noValidate\n      autoComplete=\"off\"\n    >\n      <div>\n        <TextField\n          required\n          id=\"outlined-required\"\n          label=\"Required\"\n          defaultValue=\"Hello World\"\n        />\n      </div>\n    </Box>\n  );\n /* const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errors, setErrors] = useState<{ [key: string]: string }>({});\n\n  const navigate = useNavigate();\n\n  const validate = () => {\n    let tempErrors: { [key: string]: string } = {};\n\n    if (!email) {\n      tempErrors.email = \"This field is required!\";\n    } else if (!/\\S+@\\S+\\.\\S+/.test(email)) {\n      tempErrors.email = \"This is not a valid email.\";\n    }\n\n    if (!password) {\n      tempErrors.password = \"This field is required!\";\n    }\n\n    setErrors(tempErrors);\n\n    return Object.keys(tempErrors).length === 0;\n  };\n\n  const handleLogin = () => {\n    if (!validate()) {\n      return;\n    }\n\n    navigate(\"/dashboard\");\n  };\n\n  const handleInputChange = (setter: React.Dispatch<React.SetStateAction<string>>, field: string) => (e: React.ChangeEvent<HTMLInputElement>) => {\n    setter(e.target.value);\n    setErrors((prevErrors) => {\n      const { [field]: removedError, ...rest } = prevErrors;\n      return rest;\n    });\n  };\n\n  return (\n    <div className=\"root-container\" style={{ backgroundImage: `url(${loginBG})` }}>\n      <div className=\"login-box\">\n        <img\n          src={logoImage}\n          alt=\"Crashpad Logo\"\n          className=\"logo\"\n        />\n        <form noValidate autoComplete=\"off\">\n          <TextField\n            fullWidth\n            margin=\"normal\"\n            id=\"email\"\n            label=\"Email Address\"\n            variant=\"outlined\"\n            value={email}\n            onChange={handleInputChange(setEmail, \"email\")}\n            error={!!errors.email}\n            helperText={errors.email}\n          />\n          <TextField\n            fullWidth\n            margin=\"normal\"\n            id=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            variant=\"outlined\"\n            value={password}\n            onChange={handleInputChange(setPassword, \"password\")}\n            error={!!errors.password}\n            helperText={errors.password}\n          />\n          <Button\n            fullWidth\n            variant=\"contained\"\n            className=\"login-button\"\n            onClick={handleLogin}\n          >\n            Login\n          </Button>\n          <Typography variant=\"body2\" style={{ marginTop: \"1em\" }}>\n            New to Crashpad?\n            <Link to=\"/SignUp\" className=\"signup-link\">\n              Sign up here\n            </Link>\n          </Typography>\n        </form>\n      </div>\n    </div>\n  );*/\n};\n\nexport default Login;"],"mappings":";AAAA,OAAOA,KAAK,MAAoB,OAAO;AACvC,SAASC,SAAS,EAAEC,GAAG,QAAQ,eAAe;AAC9C,OAAO,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGhC,MAAMC,KAAe,GAAGA,CAAA,KAAM;EAC5B,oBACED,OAAA,CAACF,GAAG;IACFI,SAAS,EAAC,MAAM;IAChBC,EAAE,EAAE;MACF,sBAAsB,EAAE;QAAEC,CAAC,EAAE,CAAC;QAAEC,KAAK,EAAE;MAAO;IAChD,CAAE;IACFC,UAAU;IACVC,YAAY,EAAC,KAAK;IAAAC,QAAA,eAElBR,OAAA;MAAAQ,QAAA,eACER,OAAA,CAACH,SAAS;QACRY,QAAQ;QACRC,EAAE,EAAC,mBAAmB;QACtBC,KAAK,EAAC,UAAU;QAChBC,YAAY,EAAC;MAAa;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3B;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;EAET;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAWA,CAAC;AAACC,EAAA,GA9GIhB,KAAe;AAgHrB,eAAeA,KAAK;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}