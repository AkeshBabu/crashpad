{"ast":null,"code":"var _jsxFileName = \"/Users/snehaqbee/crashpad_frontend/src/components/registration/signUp.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport AccountForm from \"./AccountForm\";\nimport AuthService from \"../../services/registration/authentication\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SignUp = () => {\n  _s();\n  const [message, setMessage] = useState(\"\");\n  const navigate = useNavigate();\n  const handleRegister = (username, email, password, isTraveller, isHost) => {\n    AuthService.register(username, email, password).then(response => {\n      setMessage(response.data.message);\n      navigate(\"/dashboard\");\n    }, error => {\n      const resMessage = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n      setMessage(resMessage);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(AccountForm, {\n    isLogin: false,\n    onSubmit: handleRegister,\n    message: message,\n    setMessage: setMessage\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(SignUp, \"a8PARnOzpJ4f9XTPNmrrrCDJT3c=\", false, function () {\n  return [useNavigate];\n});\n_c = SignUp;\nexport default SignUp;\nvar _c;\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"names":["React","useState","useNavigate","AccountForm","AuthService","jsxDEV","_jsxDEV","SignUp","_s","message","setMessage","navigate","handleRegister","username","email","password","isTraveller","isHost","register","then","response","data","error","resMessage","toString","isLogin","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/snehaqbee/crashpad_frontend/src/components/registration/signUp.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport AccountForm from \"./AccountForm\";\nimport AuthService from \"../../services/registration/authentication\";\n\nconst SignUp: React.FC = () => {\n  const [message, setMessage] = useState(\"\");\n  const navigate = useNavigate();\n\n  const handleRegister = (username: string, email: string, password: string, isTraveller: boolean, isHost: boolean) => {\n    AuthService.register(username, email, password).then(\n      (response) => {\n        setMessage(response.data.message);\n        navigate(\"/dashboard\");\n      },\n      (error) => {\n        const resMessage =\n          (error.response &&\n            error.response.data &&\n            error.response.data.message) ||\n          error.message ||\n          error.toString();\n\n        setMessage(resMessage);\n      }\n    );\n  };\n\n  return (\n    <AccountForm\n      isLogin={false}\n      onSubmit={handleRegister}\n      message={message}\n      setMessage={setMessage}\n    />\n  );\n};\n\nexport default SignUp;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,WAAW,MAAM,4CAA4C;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErE,MAAMC,MAAgB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC7B,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAMU,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAE9B,MAAMU,cAAc,GAAGA,CAACC,QAAgB,EAAEC,KAAa,EAAEC,QAAgB,EAAEC,WAAoB,EAAEC,MAAe,KAAK;IACnHb,WAAW,CAACc,QAAQ,CAACL,QAAQ,EAAEC,KAAK,EAAEC,QAAQ,CAAC,CAACI,IAAI,CACjDC,QAAQ,IAAK;MACZV,UAAU,CAACU,QAAQ,CAACC,IAAI,CAACZ,OAAO,CAAC;MACjCE,QAAQ,CAAC,YAAY,CAAC;IACxB,CAAC,EACAW,KAAK,IAAK;MACT,MAAMC,UAAU,GACbD,KAAK,CAACF,QAAQ,IACbE,KAAK,CAACF,QAAQ,CAACC,IAAI,IACnBC,KAAK,CAACF,QAAQ,CAACC,IAAI,CAACZ,OAAO,IAC7Ba,KAAK,CAACb,OAAO,IACba,KAAK,CAACE,QAAQ,CAAC,CAAC;MAElBd,UAAU,CAACa,UAAU,CAAC;IACxB,CACF,CAAC;EACH,CAAC;EAED,oBACEjB,OAAA,CAACH,WAAW;IACVsB,OAAO,EAAE,KAAM;IACfC,QAAQ,EAAEd,cAAe;IACzBH,OAAO,EAAEA,OAAQ;IACjBC,UAAU,EAAEA;EAAW;IAAAiB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxB,CAAC;AAEN,CAAC;AAACtB,EAAA,CA/BID,MAAgB;EAAA,QAEHL,WAAW;AAAA;AAAA6B,EAAA,GAFxBxB,MAAgB;AAiCtB,eAAeA,MAAM;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}